<!DOCTYPE html>
<html lang="en-US" dir="ltr">
    <head>
        {% metagen 
            title=title,
            desc=meta_desc,
            url=url,
            img=url + img,
            img_alt=alt,
            twitter_card_type=cardType,
            twitter_handle=site.author.twitterHandle,
            name=site.author.firstName + " " + site.author.lastName,
            generator="Eleventy v2.0.1",
            comments=true
        %}
        <link rel="apple-touch-icon" sizes="180x180" href="/favicon_data/apple-touch-icon.png">
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon_data/favicon-32x32.png">
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon_data/favicon-16x16.png">
        <link rel="manifest" href="/favicon_data/site.webmanifest">
        <link rel="stylesheet" href="/css/baguetteBox.min.css">
        {% set css %}
            {% include "css/style.css" %}
            {% include "css/reset.css" %}
        {% endset %}
        <style>
            {{ css | cssmin | safe }}
        </style>
    </head>
    <body>
        <div class="containerz">
            <a href="#main" class="skip-link">Skip to main content</a>
            {% include "partials/nav.njk" %}
            {{ content | safe }}
            <!-- {% include "partials/footer.njk" %} -->
        </div>
        <script>
        document.addEventListener('DOMContentLoaded', function() {
  const gridItems = document.querySelectorAll('.grid-item');
  
  gridItems.forEach(item => {
    const links = item.querySelectorAll('a');
    if (links.length < 2) return; // No animar si solo hay una imagen
    
    // Activar una imagen aleatoria al inicio
    const randomStartIndex = Math.floor(Math.random() * links.length);
    links.forEach(link => link.classList.remove('active'));
    links[randomStartIndex].classList.add('active');
    
    // Iniciar rotación aleatoria para este item
    startRandomRotation(item);
  });
  
  function startRandomRotation(item) {
    const links = item.querySelectorAll('a');
    const linkCount = links.length;
    let currentIndex = Array.from(links).findIndex(link => link.classList.contains('active'));
    
    // Intervalo aleatorio entre 2 y 8 segundos
    const getRandomInterval = () => Math.random() * 6000 + 2000;
    
    function rotateImage() {
      // Ocultar imagen actual
      links[currentIndex].classList.remove('active');
      
      // Seleccionar nueva imagen (asegurando que no sea la misma)
      let newIndex;
      do {
        newIndex = Math.floor(Math.random() * linkCount);
      } while (newIndex === currentIndex && linkCount > 1);
      
      currentIndex = newIndex;
      
      // Mostrar nueva imagen
      links[currentIndex].classList.add('active');
      
      // Programar próximo cambio con nuevo intervalo aleatorio
      setTimeout(rotateImage, getRandomInterval());
    }
    
    // Iniciar rotación después de un retraso inicial aleatorio
    setTimeout(rotateImage, getRandomInterval());
  }
});
        </script>
        <script src="/js/baguetteBox.min.js"></script>
        <script src="/js/lightbox.js"></script> <!-- Tu archivo con la inicialización -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  baguetteBox.run('.gallery');
});
</script>
    </body>
</html>